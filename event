import { PrismaClient } from "@prisma/client";
import { config } from "dotenv";
config();

const prisma = new PrismaClient();

const eventsController = () => {
  return {
    async create(req, res) {
      const { name, date, location, description } = req.body;
      try {
        const event = await prisma.events.create({
          data: {
            name,
            date,
            location,
            description,
          },
        });
        res.status(201).json({
          message: "Event created successfully",
          event,
        });
      } catch (error) {
        console.log(error);
        res.status(500).json({
          message: "Something went wrong",
          error,
        });
      }
    },

    async getEvent(req, res) {
      const { id } = req.params;
      try {
        const event = await prisma.events.findUnique({
          where: {
            id: parseInt(id),
          },
        });
        if (!event) {
          return res.status(404).json({
            message: "Event not found",
          });
        }
        res.status(200).json({
          message: "Event found",
          event,
        });
      } catch (error) {
        console.log(error);
        res.status(500).json({
          message: "Something went wrong",
          error,
        });
      }
    },

    async updateEvent(req, res) {
      const { id } = req.params;
      const { name, date, location, description } = req.body;
      try {
        const event = await prisma.events.update({
          where: {
            id: parseInt(id),
          },
          data: {
            name,
            date,
            location,
            description,
          },
        });

        res.status(200).json({
          message: "Event updated successfully",
          event,
        });
      } catch (error) {
        console.log(error);
        res.status(500).json({
          message: "Something went wrong",
          error,
        });
      }
    },

    async deleteEvent(req, res) {
      const { id } = req.params;
      try {
        const event = await prisma.events.delete({
          where: {
            id: parseInt(id),
          },
        });

        res.status(200).json({
          message: "Event deleted successfully",
          event,
        });
      } catch (error) {
        console.log(error);
        res.status(500).json({
          message: "Something went wrong",
          error,
        });
      }
    },
  };
};

export default eventsController;
